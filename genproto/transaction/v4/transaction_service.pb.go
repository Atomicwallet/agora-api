// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transaction/v4/transaction_service.proto

package transaction

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	v3 "github.com/kinecosystem/agora-api/genproto/common/v3"
	v4 "github.com/kinecosystem/agora-api/genproto/common/v4"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetHistoryRequest_Direction int32

const (
	// ASC direction returns all history items in
	// ascending (based on chain order) from the cursor.
	GetHistoryRequest_ASC GetHistoryRequest_Direction = 0
	// DESC direction returns all history items in
	// descending (based on chain order) from _before_ the cursor.
	GetHistoryRequest_DESC GetHistoryRequest_Direction = 1
)

var GetHistoryRequest_Direction_name = map[int32]string{
	0: "ASC",
	1: "DESC",
}

var GetHistoryRequest_Direction_value = map[string]int32{
	"ASC":  0,
	"DESC": 1,
}

func (x GetHistoryRequest_Direction) String() string {
	return proto.EnumName(GetHistoryRequest_Direction_name, int32(x))
}

func (GetHistoryRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{8, 0}
}

type GetHistoryResponse_Result int32

const (
	GetHistoryResponse_OK        GetHistoryResponse_Result = 0
	GetHistoryResponse_NOT_FOUND GetHistoryResponse_Result = 1
)

var GetHistoryResponse_Result_name = map[int32]string{
	0: "OK",
	1: "NOT_FOUND",
}

var GetHistoryResponse_Result_value = map[string]int32{
	"OK":        0,
	"NOT_FOUND": 1,
}

func (x GetHistoryResponse_Result) String() string {
	return proto.EnumName(GetHistoryResponse_Result_name, int32(x))
}

func (GetHistoryResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{9, 0}
}

type SubmitTransactionResponse_Result int32

const (
	SubmitTransactionResponse_OK SubmitTransactionResponse_Result = 0
	// Indicates that the transaction has already been submitted.
	//
	// If the client is retrying a submission due to a transient
	// failure, then this can occur if the submission in a previous
	// attempt was successful. Otherwise, it may indicate that the
	// transcation is indistinguishable from a previous transaction
	// (i.e. same block hash, sender, dest, and amount), and the client
	// should use a different recent block hash and try again.
	SubmitTransactionResponse_ALREADY_SUBMITTED SubmitTransactionResponse_Result = 1
	// There was an issue with submitting the transaction
	// to the underlying chain. Clients should retry with
	// a rebuilt transaction in case there are temporal
	// issues with the transaction, such as sequence number,
	// or some other chain-specific errors. The detail of
	// the error is present in the result xdr.
	SubmitTransactionResponse_FAILED SubmitTransactionResponse_Result = 2
	// Indicates that the configured webhook for this transaction
	// rejected the transaction without a specified reason.
	SubmitTransactionResponse_REJECTED SubmitTransactionResponse_Result = 3
	// Indicates there was an error with one or more of the
	// supplied invoices.
	//
	// See: invoice_errors.
	SubmitTransactionResponse_INVOICE_ERROR SubmitTransactionResponse_Result = 4
	// Payer required indicates that the submitted transaction does not contain
	// a signature at for the transaction funder account (the account at the 0th index).
	//
	// This can occur if the service does not have a subsdizier configured, or if
	// the service refuses to subsidize this specific transaction. The latter
	// case can occur during rate limiting situations. In this case, the client
	// may either retry at a later time, or attempt to fund the transaction some
	// other way.
	SubmitTransactionResponse_PAYER_REQUIRED SubmitTransactionResponse_Result = 5
)

var SubmitTransactionResponse_Result_name = map[int32]string{
	0: "OK",
	1: "ALREADY_SUBMITTED",
	2: "FAILED",
	3: "REJECTED",
	4: "INVOICE_ERROR",
	5: "PAYER_REQUIRED",
}

var SubmitTransactionResponse_Result_value = map[string]int32{
	"OK":                0,
	"ALREADY_SUBMITTED": 1,
	"FAILED":            2,
	"REJECTED":          3,
	"INVOICE_ERROR":     4,
	"PAYER_REQUIRED":    5,
}

func (x SubmitTransactionResponse_Result) String() string {
	return proto.EnumName(SubmitTransactionResponse_Result_name, int32(x))
}

func (SubmitTransactionResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{11, 0}
}

type GetTransactionResponse_State int32

const (
	GetTransactionResponse_UNKNOWN GetTransactionResponse_State = 0
	GetTransactionResponse_SUCCESS GetTransactionResponse_State = 1
	GetTransactionResponse_FAILED  GetTransactionResponse_State = 2
	GetTransactionResponse_PENDING GetTransactionResponse_State = 3
)

var GetTransactionResponse_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "FAILED",
	3: "PENDING",
}

var GetTransactionResponse_State_value = map[string]int32{
	"UNKNOWN": 0,
	"SUCCESS": 1,
	"FAILED":  2,
	"PENDING": 3,
}

func (x GetTransactionResponse_State) String() string {
	return proto.EnumName(GetTransactionResponse_State_name, int32(x))
}

func (GetTransactionResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{13, 0}
}

type GetServiceConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceConfigRequest) Reset()         { *m = GetServiceConfigRequest{} }
func (m *GetServiceConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetServiceConfigRequest) ProtoMessage()    {}
func (*GetServiceConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{0}
}

func (m *GetServiceConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceConfigRequest.Unmarshal(m, b)
}
func (m *GetServiceConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetServiceConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceConfigRequest.Merge(m, src)
}
func (m *GetServiceConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetServiceConfigRequest.Size(m)
}
func (m *GetServiceConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceConfigRequest proto.InternalMessageInfo

type GetServiceConfigResponse struct {
	// The public key of the account that the service will use to sign transactions for funding.
	// If not specified, the service is _not_ configured to fund transactions.
	SubsidizerAccount *v4.SolanaAccountId `protobuf:"bytes,1,opt,name=subsidizer_account,json=subsidizerAccount,proto3" json:"subsidizer_account,omitempty"`
	// note: after release these values cannot change, and will be static per environment.
	TokenProgram         *v4.SolanaAccountId `protobuf:"bytes,2,opt,name=token_program,json=tokenProgram,proto3" json:"token_program,omitempty"`
	Token                *v4.SolanaAccountId `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetServiceConfigResponse) Reset()         { *m = GetServiceConfigResponse{} }
func (m *GetServiceConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetServiceConfigResponse) ProtoMessage()    {}
func (*GetServiceConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{1}
}

func (m *GetServiceConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceConfigResponse.Unmarshal(m, b)
}
func (m *GetServiceConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceConfigResponse.Marshal(b, m, deterministic)
}
func (m *GetServiceConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceConfigResponse.Merge(m, src)
}
func (m *GetServiceConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetServiceConfigResponse.Size(m)
}
func (m *GetServiceConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceConfigResponse proto.InternalMessageInfo

func (m *GetServiceConfigResponse) GetSubsidizerAccount() *v4.SolanaAccountId {
	if m != nil {
		return m.SubsidizerAccount
	}
	return nil
}

func (m *GetServiceConfigResponse) GetTokenProgram() *v4.SolanaAccountId {
	if m != nil {
		return m.TokenProgram
	}
	return nil
}

func (m *GetServiceConfigResponse) GetToken() *v4.SolanaAccountId {
	if m != nil {
		return m.Token
	}
	return nil
}

type GetMinimumKinVersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMinimumKinVersionRequest) Reset()         { *m = GetMinimumKinVersionRequest{} }
func (m *GetMinimumKinVersionRequest) String() string { return proto.CompactTextString(m) }
func (*GetMinimumKinVersionRequest) ProtoMessage()    {}
func (*GetMinimumKinVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{2}
}

func (m *GetMinimumKinVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMinimumKinVersionRequest.Unmarshal(m, b)
}
func (m *GetMinimumKinVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMinimumKinVersionRequest.Marshal(b, m, deterministic)
}
func (m *GetMinimumKinVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMinimumKinVersionRequest.Merge(m, src)
}
func (m *GetMinimumKinVersionRequest) XXX_Size() int {
	return xxx_messageInfo_GetMinimumKinVersionRequest.Size(m)
}
func (m *GetMinimumKinVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMinimumKinVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMinimumKinVersionRequest proto.InternalMessageInfo

type GetMinimumKinVersionResponse struct {
	Version              uint32   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMinimumKinVersionResponse) Reset()         { *m = GetMinimumKinVersionResponse{} }
func (m *GetMinimumKinVersionResponse) String() string { return proto.CompactTextString(m) }
func (*GetMinimumKinVersionResponse) ProtoMessage()    {}
func (*GetMinimumKinVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{3}
}

func (m *GetMinimumKinVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMinimumKinVersionResponse.Unmarshal(m, b)
}
func (m *GetMinimumKinVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMinimumKinVersionResponse.Marshal(b, m, deterministic)
}
func (m *GetMinimumKinVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMinimumKinVersionResponse.Merge(m, src)
}
func (m *GetMinimumKinVersionResponse) XXX_Size() int {
	return xxx_messageInfo_GetMinimumKinVersionResponse.Size(m)
}
func (m *GetMinimumKinVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMinimumKinVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMinimumKinVersionResponse proto.InternalMessageInfo

func (m *GetMinimumKinVersionResponse) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type GetRecentBlockhashRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecentBlockhashRequest) Reset()         { *m = GetRecentBlockhashRequest{} }
func (m *GetRecentBlockhashRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecentBlockhashRequest) ProtoMessage()    {}
func (*GetRecentBlockhashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{4}
}

func (m *GetRecentBlockhashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecentBlockhashRequest.Unmarshal(m, b)
}
func (m *GetRecentBlockhashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecentBlockhashRequest.Marshal(b, m, deterministic)
}
func (m *GetRecentBlockhashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecentBlockhashRequest.Merge(m, src)
}
func (m *GetRecentBlockhashRequest) XXX_Size() int {
	return xxx_messageInfo_GetRecentBlockhashRequest.Size(m)
}
func (m *GetRecentBlockhashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecentBlockhashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecentBlockhashRequest proto.InternalMessageInfo

type GetRecentBlockhashResponse struct {
	Blockhash            *v4.Blockhash `protobuf:"bytes,1,opt,name=blockhash,proto3" json:"blockhash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetRecentBlockhashResponse) Reset()         { *m = GetRecentBlockhashResponse{} }
func (m *GetRecentBlockhashResponse) String() string { return proto.CompactTextString(m) }
func (*GetRecentBlockhashResponse) ProtoMessage()    {}
func (*GetRecentBlockhashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{5}
}

func (m *GetRecentBlockhashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecentBlockhashResponse.Unmarshal(m, b)
}
func (m *GetRecentBlockhashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecentBlockhashResponse.Marshal(b, m, deterministic)
}
func (m *GetRecentBlockhashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecentBlockhashResponse.Merge(m, src)
}
func (m *GetRecentBlockhashResponse) XXX_Size() int {
	return xxx_messageInfo_GetRecentBlockhashResponse.Size(m)
}
func (m *GetRecentBlockhashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecentBlockhashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecentBlockhashResponse proto.InternalMessageInfo

func (m *GetRecentBlockhashResponse) GetBlockhash() *v4.Blockhash {
	if m != nil {
		return m.Blockhash
	}
	return nil
}

type GetMinimumBalanceForRentExemptionRequest struct {
	Size                 uint64   `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMinimumBalanceForRentExemptionRequest) Reset() {
	*m = GetMinimumBalanceForRentExemptionRequest{}
}
func (m *GetMinimumBalanceForRentExemptionRequest) String() string { return proto.CompactTextString(m) }
func (*GetMinimumBalanceForRentExemptionRequest) ProtoMessage()    {}
func (*GetMinimumBalanceForRentExemptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{6}
}

func (m *GetMinimumBalanceForRentExemptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMinimumBalanceForRentExemptionRequest.Unmarshal(m, b)
}
func (m *GetMinimumBalanceForRentExemptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMinimumBalanceForRentExemptionRequest.Marshal(b, m, deterministic)
}
func (m *GetMinimumBalanceForRentExemptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMinimumBalanceForRentExemptionRequest.Merge(m, src)
}
func (m *GetMinimumBalanceForRentExemptionRequest) XXX_Size() int {
	return xxx_messageInfo_GetMinimumBalanceForRentExemptionRequest.Size(m)
}
func (m *GetMinimumBalanceForRentExemptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMinimumBalanceForRentExemptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMinimumBalanceForRentExemptionRequest proto.InternalMessageInfo

func (m *GetMinimumBalanceForRentExemptionRequest) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type GetMinimumBalanceForRentExemptionResponse struct {
	Lamports             uint64   `protobuf:"varint,1,opt,name=lamports,proto3" json:"lamports,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMinimumBalanceForRentExemptionResponse) Reset() {
	*m = GetMinimumBalanceForRentExemptionResponse{}
}
func (m *GetMinimumBalanceForRentExemptionResponse) String() string { return proto.CompactTextString(m) }
func (*GetMinimumBalanceForRentExemptionResponse) ProtoMessage()    {}
func (*GetMinimumBalanceForRentExemptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{7}
}

func (m *GetMinimumBalanceForRentExemptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMinimumBalanceForRentExemptionResponse.Unmarshal(m, b)
}
func (m *GetMinimumBalanceForRentExemptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMinimumBalanceForRentExemptionResponse.Marshal(b, m, deterministic)
}
func (m *GetMinimumBalanceForRentExemptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMinimumBalanceForRentExemptionResponse.Merge(m, src)
}
func (m *GetMinimumBalanceForRentExemptionResponse) XXX_Size() int {
	return xxx_messageInfo_GetMinimumBalanceForRentExemptionResponse.Size(m)
}
func (m *GetMinimumBalanceForRentExemptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMinimumBalanceForRentExemptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMinimumBalanceForRentExemptionResponse proto.InternalMessageInfo

func (m *GetMinimumBalanceForRentExemptionResponse) GetLamports() uint64 {
	if m != nil {
		return m.Lamports
	}
	return 0
}

type GetHistoryRequest struct {
	// Account to get history for.
	AccountId *v4.SolanaAccountId `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// An optional history cursor indicating where in
	// the history to 'resume' from.
	Cursor *Cursor `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// The order in which to return history items from
	// the cursor.
	Direction            GetHistoryRequest_Direction `protobuf:"varint,3,opt,name=direction,proto3,enum=kin.agora.transaction.v4.GetHistoryRequest_Direction" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *GetHistoryRequest) Reset()         { *m = GetHistoryRequest{} }
func (m *GetHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetHistoryRequest) ProtoMessage()    {}
func (*GetHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{8}
}

func (m *GetHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHistoryRequest.Unmarshal(m, b)
}
func (m *GetHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHistoryRequest.Marshal(b, m, deterministic)
}
func (m *GetHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHistoryRequest.Merge(m, src)
}
func (m *GetHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetHistoryRequest.Size(m)
}
func (m *GetHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHistoryRequest proto.InternalMessageInfo

func (m *GetHistoryRequest) GetAccountId() *v4.SolanaAccountId {
	if m != nil {
		return m.AccountId
	}
	return nil
}

func (m *GetHistoryRequest) GetCursor() *Cursor {
	if m != nil {
		return m.Cursor
	}
	return nil
}

func (m *GetHistoryRequest) GetDirection() GetHistoryRequest_Direction {
	if m != nil {
		return m.Direction
	}
	return GetHistoryRequest_ASC
}

type GetHistoryResponse struct {
	Result               GetHistoryResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=kin.agora.transaction.v4.GetHistoryResponse_Result" json:"result,omitempty"`
	Items                []*HistoryItem            `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetHistoryResponse) Reset()         { *m = GetHistoryResponse{} }
func (m *GetHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetHistoryResponse) ProtoMessage()    {}
func (*GetHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{9}
}

func (m *GetHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHistoryResponse.Unmarshal(m, b)
}
func (m *GetHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHistoryResponse.Marshal(b, m, deterministic)
}
func (m *GetHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHistoryResponse.Merge(m, src)
}
func (m *GetHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetHistoryResponse.Size(m)
}
func (m *GetHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetHistoryResponse proto.InternalMessageInfo

func (m *GetHistoryResponse) GetResult() GetHistoryResponse_Result {
	if m != nil {
		return m.Result
	}
	return GetHistoryResponse_OK
}

func (m *GetHistoryResponse) GetItems() []*HistoryItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type SubmitTransactionRequest struct {
	Transaction *v4.Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	// An optional invoice list associating each operation with an invoice.
	//
	// If an invoice list is included, it is expected that the foreign key in
	// the transaction memo is the SHA-224 hash of the serialized invoice list.
	//
	// The invoice list will be included in webhook calls for the application the
	// transaction pertains to (as specified by the memo app index).
	//
	// The submitted invoice data will only be available for retrieval from the service it
	// was submitted to and not directly from the blockchain nor any other deployments of
	// the service.
	InvoiceList *v3.InvoiceList `protobuf:"bytes,2,opt,name=invoice_list,json=invoiceList,proto3" json:"invoice_list,omitempty"`
	Commitment  v4.Commitment   `protobuf:"varint,3,opt,name=commitment,proto3,enum=kin.agora.common.v4.Commitment" json:"commitment,omitempty"`
	// dedupe_id specifies an identifier that this transaction is associated with.
	//
	// If the service has already seen this ID, it will return the previous transaction
	// status.
	//
	// The motivator for this identifier is that SDKs that retry at a higher level do
	// not have access to the Blockhash information that the underlying SDK used in
	// certain circumstances. Notably, in time out related cases, it is possible that
	// the transaction was submitted, but the (SDK) caller will not be able to infer
	// the signature.
	DedupeId             []byte   `protobuf:"bytes,4,opt,name=dedupe_id,json=dedupeId,proto3" json:"dedupe_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitTransactionRequest) Reset()         { *m = SubmitTransactionRequest{} }
func (m *SubmitTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionRequest) ProtoMessage()    {}
func (*SubmitTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{10}
}

func (m *SubmitTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionRequest.Unmarshal(m, b)
}
func (m *SubmitTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SubmitTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionRequest.Merge(m, src)
}
func (m *SubmitTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionRequest.Size(m)
}
func (m *SubmitTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionRequest proto.InternalMessageInfo

func (m *SubmitTransactionRequest) GetTransaction() *v4.Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *SubmitTransactionRequest) GetInvoiceList() *v3.InvoiceList {
	if m != nil {
		return m.InvoiceList
	}
	return nil
}

func (m *SubmitTransactionRequest) GetCommitment() v4.Commitment {
	if m != nil {
		return m.Commitment
	}
	return v4.Commitment_RECENT
}

func (m *SubmitTransactionRequest) GetDedupeId() []byte {
	if m != nil {
		return m.DedupeId
	}
	return nil
}

type SubmitTransactionResponse struct {
	Result SubmitTransactionResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=kin.agora.transaction.v4.SubmitTransactionResponse_Result" json:"result,omitempty"`
	// The signature of the transaction.
	Signature *v4.TransactionSignature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// Present when result = FAILED.
	TransactionError *v4.TransactionError `protobuf:"bytes,3,opt,name=transaction_error,json=transactionError,proto3" json:"transaction_error,omitempty"`
	// Present when result = INVOICE_ERROR.
	InvoiceErrors        []*v3.InvoiceError `protobuf:"bytes,4,rep,name=invoice_errors,json=invoiceErrors,proto3" json:"invoice_errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SubmitTransactionResponse) Reset()         { *m = SubmitTransactionResponse{} }
func (m *SubmitTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionResponse) ProtoMessage()    {}
func (*SubmitTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{11}
}

func (m *SubmitTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionResponse.Unmarshal(m, b)
}
func (m *SubmitTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionResponse.Marshal(b, m, deterministic)
}
func (m *SubmitTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionResponse.Merge(m, src)
}
func (m *SubmitTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionResponse.Size(m)
}
func (m *SubmitTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionResponse proto.InternalMessageInfo

func (m *SubmitTransactionResponse) GetResult() SubmitTransactionResponse_Result {
	if m != nil {
		return m.Result
	}
	return SubmitTransactionResponse_OK
}

func (m *SubmitTransactionResponse) GetSignature() *v4.TransactionSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *SubmitTransactionResponse) GetTransactionError() *v4.TransactionError {
	if m != nil {
		return m.TransactionError
	}
	return nil
}

func (m *SubmitTransactionResponse) GetInvoiceErrors() []*v3.InvoiceError {
	if m != nil {
		return m.InvoiceErrors
	}
	return nil
}

type GetTransactionRequest struct {
	TransactionId        *v4.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Commitment           v4.Commitment     `protobuf:"varint,2,opt,name=commitment,proto3,enum=kin.agora.common.v4.Commitment" json:"commitment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetTransactionRequest) Reset()         { *m = GetTransactionRequest{} }
func (m *GetTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionRequest) ProtoMessage()    {}
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{12}
}

func (m *GetTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionRequest.Unmarshal(m, b)
}
func (m *GetTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionRequest.Merge(m, src)
}
func (m *GetTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionRequest.Size(m)
}
func (m *GetTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionRequest proto.InternalMessageInfo

func (m *GetTransactionRequest) GetTransactionId() *v4.TransactionId {
	if m != nil {
		return m.TransactionId
	}
	return nil
}

func (m *GetTransactionRequest) GetCommitment() v4.Commitment {
	if m != nil {
		return m.Commitment
	}
	return v4.Commitment_RECENT
}

type GetTransactionResponse struct {
	// The state of the transaction. The states are the same as
	// SubmitTransaction, with the exception of UNKNOWN, which indicates
	// that the system does not have a record of the transaction. This
	// can occur if the transaction is still pending or if it has failed.
	//
	// If the transaction state is UNKNOWN for an extended period of
	// time, it is likely that it was dropped. As a result, clients
	// should limit the total times GetTransaction is called for a
	// an UNKNOWN transaction.
	State GetTransactionResponse_State `protobuf:"varint,1,opt,name=state,proto3,enum=kin.agora.transaction.v4.GetTransactionResponse_State" json:"state,omitempty"`
	// Non-zero when state == State::SUCCESS
	Slot uint64 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	// The number of confirmations for the transaction.
	// The value is irrelevant when state != State::PENDING.
	Confirmations uint32 `protobuf:"varint,3,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	// Present when state == State::SUCCESS.
	// May or may not be present in other cases.
	Item                 *HistoryItem `protobuf:"bytes,4,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetTransactionResponse) Reset()         { *m = GetTransactionResponse{} }
func (m *GetTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionResponse) ProtoMessage()    {}
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{13}
}

func (m *GetTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionResponse.Unmarshal(m, b)
}
func (m *GetTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionResponse.Marshal(b, m, deterministic)
}
func (m *GetTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionResponse.Merge(m, src)
}
func (m *GetTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransactionResponse.Size(m)
}
func (m *GetTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionResponse proto.InternalMessageInfo

func (m *GetTransactionResponse) GetState() GetTransactionResponse_State {
	if m != nil {
		return m.State
	}
	return GetTransactionResponse_UNKNOWN
}

func (m *GetTransactionResponse) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *GetTransactionResponse) GetConfirmations() uint32 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *GetTransactionResponse) GetItem() *HistoryItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type HistoryItem struct {
	TransactionId *v4.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	// The cursor position of this item.
	Cursor *Cursor `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// The raw transaction primitive for the transaction.
	//
	// Types that are valid to be assigned to RawTransaction:
	//	*HistoryItem_SolanaTransaction
	//	*HistoryItem_StellarTransaction
	RawTransaction isHistoryItem_RawTransaction `protobuf_oneof:"raw_transaction"`
	// Present if the transaction failed.
	TransactionError *v4.TransactionError `protobuf:"bytes,5,opt,name=transaction_error,json=transactionError,proto3" json:"transaction_error,omitempty"`
	// The set of payments contained in the raw_transaction.
	//
	// Payment is an abstract view over a StellarPayment or
	// a Solana transfer. In the Stellar case, the Stellar
	// accounts will be mapped to a SolanaAccountId.
	//
	// Note: A transaction _may_ not contain any transfers, in
	// which case `payments` will be empty.
	Payments []*HistoryItem_Payment `protobuf:"bytes,6,rep,name=payments,proto3" json:"payments,omitempty"`
	// If an invoice list was submitted with the transaction, and the transaction
	// was submitted via this instance of the service, this field will be set.
	InvoiceList          *v3.InvoiceList `protobuf:"bytes,7,opt,name=invoice_list,json=invoiceList,proto3" json:"invoice_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *HistoryItem) Reset()         { *m = HistoryItem{} }
func (m *HistoryItem) String() string { return proto.CompactTextString(m) }
func (*HistoryItem) ProtoMessage()    {}
func (*HistoryItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{14}
}

func (m *HistoryItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryItem.Unmarshal(m, b)
}
func (m *HistoryItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryItem.Marshal(b, m, deterministic)
}
func (m *HistoryItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryItem.Merge(m, src)
}
func (m *HistoryItem) XXX_Size() int {
	return xxx_messageInfo_HistoryItem.Size(m)
}
func (m *HistoryItem) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryItem.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryItem proto.InternalMessageInfo

func (m *HistoryItem) GetTransactionId() *v4.TransactionId {
	if m != nil {
		return m.TransactionId
	}
	return nil
}

func (m *HistoryItem) GetCursor() *Cursor {
	if m != nil {
		return m.Cursor
	}
	return nil
}

type isHistoryItem_RawTransaction interface {
	isHistoryItem_RawTransaction()
}

type HistoryItem_SolanaTransaction struct {
	SolanaTransaction *v4.Transaction `protobuf:"bytes,3,opt,name=solana_transaction,json=solanaTransaction,proto3,oneof"`
}

type HistoryItem_StellarTransaction struct {
	StellarTransaction *v4.StellarTransaction `protobuf:"bytes,4,opt,name=stellar_transaction,json=stellarTransaction,proto3,oneof"`
}

func (*HistoryItem_SolanaTransaction) isHistoryItem_RawTransaction() {}

func (*HistoryItem_StellarTransaction) isHistoryItem_RawTransaction() {}

func (m *HistoryItem) GetRawTransaction() isHistoryItem_RawTransaction {
	if m != nil {
		return m.RawTransaction
	}
	return nil
}

func (m *HistoryItem) GetSolanaTransaction() *v4.Transaction {
	if x, ok := m.GetRawTransaction().(*HistoryItem_SolanaTransaction); ok {
		return x.SolanaTransaction
	}
	return nil
}

func (m *HistoryItem) GetStellarTransaction() *v4.StellarTransaction {
	if x, ok := m.GetRawTransaction().(*HistoryItem_StellarTransaction); ok {
		return x.StellarTransaction
	}
	return nil
}

func (m *HistoryItem) GetTransactionError() *v4.TransactionError {
	if m != nil {
		return m.TransactionError
	}
	return nil
}

func (m *HistoryItem) GetPayments() []*HistoryItem_Payment {
	if m != nil {
		return m.Payments
	}
	return nil
}

func (m *HistoryItem) GetInvoiceList() *v3.InvoiceList {
	if m != nil {
		return m.InvoiceList
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*HistoryItem) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*HistoryItem_SolanaTransaction)(nil),
		(*HistoryItem_StellarTransaction)(nil),
	}
}

type HistoryItem_Payment struct {
	Source      *v4.SolanaAccountId `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Destination *v4.SolanaAccountId `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	// Amount in quarks
	Amount int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	// The index of the transfer within the transaction.
	Index                uint32   `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryItem_Payment) Reset()         { *m = HistoryItem_Payment{} }
func (m *HistoryItem_Payment) String() string { return proto.CompactTextString(m) }
func (*HistoryItem_Payment) ProtoMessage()    {}
func (*HistoryItem_Payment) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{14, 0}
}

func (m *HistoryItem_Payment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryItem_Payment.Unmarshal(m, b)
}
func (m *HistoryItem_Payment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryItem_Payment.Marshal(b, m, deterministic)
}
func (m *HistoryItem_Payment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryItem_Payment.Merge(m, src)
}
func (m *HistoryItem_Payment) XXX_Size() int {
	return xxx_messageInfo_HistoryItem_Payment.Size(m)
}
func (m *HistoryItem_Payment) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryItem_Payment.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryItem_Payment proto.InternalMessageInfo

func (m *HistoryItem_Payment) GetSource() *v4.SolanaAccountId {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *HistoryItem_Payment) GetDestination() *v4.SolanaAccountId {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *HistoryItem_Payment) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *HistoryItem_Payment) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type Cursor struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cursor) Reset()         { *m = Cursor{} }
func (m *Cursor) String() string { return proto.CompactTextString(m) }
func (*Cursor) ProtoMessage()    {}
func (*Cursor) Descriptor() ([]byte, []int) {
	return fileDescriptor_180f8fb4d585ce5d, []int{15}
}

func (m *Cursor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cursor.Unmarshal(m, b)
}
func (m *Cursor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cursor.Marshal(b, m, deterministic)
}
func (m *Cursor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cursor.Merge(m, src)
}
func (m *Cursor) XXX_Size() int {
	return xxx_messageInfo_Cursor.Size(m)
}
func (m *Cursor) XXX_DiscardUnknown() {
	xxx_messageInfo_Cursor.DiscardUnknown(m)
}

var xxx_messageInfo_Cursor proto.InternalMessageInfo

func (m *Cursor) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterEnum("kin.agora.transaction.v4.GetHistoryRequest_Direction", GetHistoryRequest_Direction_name, GetHistoryRequest_Direction_value)
	proto.RegisterEnum("kin.agora.transaction.v4.GetHistoryResponse_Result", GetHistoryResponse_Result_name, GetHistoryResponse_Result_value)
	proto.RegisterEnum("kin.agora.transaction.v4.SubmitTransactionResponse_Result", SubmitTransactionResponse_Result_name, SubmitTransactionResponse_Result_value)
	proto.RegisterEnum("kin.agora.transaction.v4.GetTransactionResponse_State", GetTransactionResponse_State_name, GetTransactionResponse_State_value)
	proto.RegisterType((*GetServiceConfigRequest)(nil), "kin.agora.transaction.v4.GetServiceConfigRequest")
	proto.RegisterType((*GetServiceConfigResponse)(nil), "kin.agora.transaction.v4.GetServiceConfigResponse")
	proto.RegisterType((*GetMinimumKinVersionRequest)(nil), "kin.agora.transaction.v4.GetMinimumKinVersionRequest")
	proto.RegisterType((*GetMinimumKinVersionResponse)(nil), "kin.agora.transaction.v4.GetMinimumKinVersionResponse")
	proto.RegisterType((*GetRecentBlockhashRequest)(nil), "kin.agora.transaction.v4.GetRecentBlockhashRequest")
	proto.RegisterType((*GetRecentBlockhashResponse)(nil), "kin.agora.transaction.v4.GetRecentBlockhashResponse")
	proto.RegisterType((*GetMinimumBalanceForRentExemptionRequest)(nil), "kin.agora.transaction.v4.GetMinimumBalanceForRentExemptionRequest")
	proto.RegisterType((*GetMinimumBalanceForRentExemptionResponse)(nil), "kin.agora.transaction.v4.GetMinimumBalanceForRentExemptionResponse")
	proto.RegisterType((*GetHistoryRequest)(nil), "kin.agora.transaction.v4.GetHistoryRequest")
	proto.RegisterType((*GetHistoryResponse)(nil), "kin.agora.transaction.v4.GetHistoryResponse")
	proto.RegisterType((*SubmitTransactionRequest)(nil), "kin.agora.transaction.v4.SubmitTransactionRequest")
	proto.RegisterType((*SubmitTransactionResponse)(nil), "kin.agora.transaction.v4.SubmitTransactionResponse")
	proto.RegisterType((*GetTransactionRequest)(nil), "kin.agora.transaction.v4.GetTransactionRequest")
	proto.RegisterType((*GetTransactionResponse)(nil), "kin.agora.transaction.v4.GetTransactionResponse")
	proto.RegisterType((*HistoryItem)(nil), "kin.agora.transaction.v4.HistoryItem")
	proto.RegisterType((*HistoryItem_Payment)(nil), "kin.agora.transaction.v4.HistoryItem.Payment")
	proto.RegisterType((*Cursor)(nil), "kin.agora.transaction.v4.Cursor")
}

func init() {
	proto.RegisterFile("transaction/v4/transaction_service.proto", fileDescriptor_180f8fb4d585ce5d)
}

var fileDescriptor_180f8fb4d585ce5d = []byte{
	// 1401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcf, 0x73, 0xdb, 0xc4,
	0x17, 0x8f, 0xfc, 0x3b, 0xcf, 0x71, 0xbe, 0xf2, 0x7e, 0xfb, 0xc3, 0x75, 0xa1, 0x75, 0x35, 0xed,
	0x90, 0x02, 0xb5, 0x8b, 0x13, 0x3a, 0xa5, 0xcc, 0x00, 0x96, 0xad, 0x38, 0x26, 0xa9, 0x93, 0xae,
	0x92, 0x32, 0xed, 0xc5, 0xa3, 0xd8, 0x8b, 0xb3, 0x13, 0x4b, 0x32, 0xda, 0xb5, 0x69, 0x32, 0xcc,
	0xc0, 0xa5, 0x97, 0xde, 0x60, 0x18, 0x2e, 0x70, 0xe2, 0x0c, 0xff, 0x03, 0x7f, 0x00, 0x17, 0xfe,
	0x9d, 0x9c, 0x18, 0x49, 0xeb, 0x58, 0x71, 0x94, 0xc4, 0x4e, 0x87, 0x9b, 0xdf, 0xdb, 0xfd, 0x7c,
	0xf4, 0xf6, 0xbd, 0x8f, 0xde, 0x3e, 0x19, 0x96, 0xb8, 0x63, 0x58, 0xcc, 0x68, 0x73, 0x6a, 0x5b,
	0xa5, 0xe1, 0x4a, 0x29, 0x60, 0xb6, 0x18, 0x71, 0x86, 0xb4, 0x4d, 0x8a, 0x7d, 0xc7, 0xe6, 0x36,
	0xca, 0xed, 0x53, 0xab, 0x68, 0x74, 0x6d, 0xc7, 0x28, 0x06, 0x36, 0x15, 0x87, 0x2b, 0xf9, 0xeb,
	0x43, 0xa3, 0x47, 0x3b, 0x06, 0x27, 0xa5, 0xd1, 0x0f, 0x1f, 0x92, 0xbf, 0xda, 0xb6, 0x4d, 0xd3,
	0xe5, 0x5d, 0x2e, 0x99, 0x76, 0x87, 0xf4, 0x26, 0xdd, 0x2b, 0x41, 0xb7, 0x72, 0x03, 0xae, 0xd7,
	0x09, 0xd7, 0xfd, 0x87, 0x56, 0x6d, 0xeb, 0x6b, 0xda, 0xc5, 0xe4, 0x9b, 0x01, 0x61, 0x5c, 0x79,
	0x13, 0x81, 0xdc, 0xe9, 0x35, 0xd6, 0xb7, 0x2d, 0x46, 0x90, 0x0e, 0x88, 0x0d, 0x76, 0x19, 0xed,
	0xd0, 0x43, 0xe2, 0xb4, 0x8c, 0x76, 0xdb, 0x1e, 0x58, 0x3c, 0x27, 0x15, 0xa4, 0xa5, 0x74, 0xf9,
	0x6e, 0x71, 0x1c, 0xb5, 0xff, 0xd4, 0xe2, 0x70, 0xa5, 0xa8, 0xdb, 0x3d, 0xc3, 0x32, 0x2a, 0xfe,
	0xce, 0x46, 0x07, 0x67, 0xc7, 0x78, 0xe1, 0x44, 0x3a, 0x64, 0xb8, 0xbd, 0x4f, 0xac, 0x56, 0xdf,
	0xb1, 0xbb, 0x8e, 0x61, 0xe6, 0x22, 0xd3, 0xf3, 0xa9, 0xa9, 0x23, 0x35, 0xfe, 0x46, 0x8a, 0xc8,
	0x12, 0x5e, 0xf0, 0x48, 0xb6, 0x7c, 0x0e, 0x54, 0x83, 0xb8, 0x67, 0xe7, 0xa2, 0x97, 0x22, 0xf3,
	0xc1, 0xca, 0xbb, 0x70, 0xb3, 0x4e, 0xf8, 0x53, 0x6a, 0x51, 0x73, 0x60, 0xae, 0x53, 0xeb, 0x39,
	0x71, 0x18, 0xb5, 0xad, 0x51, 0xae, 0x1e, 0xc3, 0x3b, 0xe1, 0xcb, 0x22, 0x5d, 0x39, 0x48, 0x0e,
	0x7d, 0x97, 0x97, 0xa3, 0x0c, 0x1e, 0x99, 0xca, 0x4d, 0xb8, 0x51, 0x27, 0x1c, 0x93, 0x36, 0xb1,
	0xb8, 0xda, 0xb3, 0xdb, 0xfb, 0x7b, 0x06, 0xdb, 0x1b, 0xd1, 0x76, 0x20, 0x1f, 0xb6, 0x28, 0x48,
	0x57, 0x61, 0x7e, 0x77, 0xe4, 0x14, 0xa9, 0xbf, 0x15, 0x7a, 0xba, 0x63, 0x68, 0xe0, 0x5c, 0x63,
	0xa8, 0xf2, 0x19, 0x2c, 0x8d, 0x83, 0x57, 0x8d, 0x9e, 0x61, 0xb5, 0xc9, 0xaa, 0xed, 0x60, 0x62,
	0x71, 0xed, 0x15, 0x31, 0xfb, 0x7c, 0x7c, 0x50, 0x84, 0x20, 0xc6, 0xe8, 0x21, 0xf1, 0x1e, 0x17,
	0xc3, 0xde, 0x6f, 0xa5, 0x0e, 0xf7, 0xa7, 0xc0, 0x8b, 0xa0, 0xf3, 0x90, 0xea, 0x19, 0x66, 0xdf,
	0x76, 0x38, 0x13, 0x24, 0xc7, 0xb6, 0xf2, 0x63, 0x04, 0xb2, 0x75, 0xc2, 0xd7, 0x28, 0xe3, 0xb6,
	0x73, 0x30, 0x7a, 0xe4, 0x53, 0x00, 0xa1, 0xaf, 0x16, 0xed, 0xcc, 0x22, 0xb1, 0xe0, 0x69, 0x8d,
	0x91, 0x13, 0x3d, 0x86, 0x44, 0x7b, 0xe0, 0x30, 0xdb, 0x11, 0xea, 0x2a, 0x14, 0xcf, 0x7a, 0xc7,
	0x8a, 0x55, 0x6f, 0x1f, 0x16, 0xfb, 0x91, 0x0e, 0xf3, 0x1d, 0xea, 0x10, 0x6f, 0xd9, 0x53, 0xd3,
	0x62, 0xf9, 0xe3, 0xb3, 0xc1, 0xa7, 0x0e, 0x52, 0xac, 0x8d, 0xc0, 0x78, 0xcc, 0xa3, 0xdc, 0x82,
	0xf9, 0x63, 0x3f, 0x4a, 0x42, 0xb4, 0xa2, 0x57, 0xe5, 0x39, 0x94, 0x82, 0x58, 0x4d, 0xd3, 0xab,
	0xb2, 0xa4, 0xfc, 0x2d, 0x01, 0x0a, 0x52, 0x89, 0x34, 0xae, 0x43, 0xc2, 0x21, 0x6c, 0xd0, 0xf3,
	0xdf, 0xb9, 0xc5, 0xf2, 0xf2, 0x74, 0x81, 0xf8, 0xe8, 0x22, 0xf6, 0xa0, 0x58, 0x50, 0xa0, 0x35,
	0x88, 0x53, 0x4e, 0x4c, 0x96, 0x8b, 0x14, 0xa2, 0x4b, 0xe9, 0xf2, 0xbd, 0xb3, 0xb9, 0x04, 0x51,
	0x83, 0x13, 0x53, 0x4d, 0x1f, 0xa9, 0xa9, 0x9f, 0xa4, 0x78, 0x6a, 0x4e, 0xfe, 0x41, 0xc2, 0x3e,
	0x81, 0x72, 0x1b, 0x12, 0x3e, 0x37, 0x4a, 0x40, 0x64, 0x73, 0x5d, 0x9e, 0x43, 0x19, 0x98, 0x6f,
	0x6e, 0x6e, 0xb7, 0x56, 0x37, 0x77, 0x9a, 0x35, 0x59, 0x52, 0x7e, 0x8e, 0x40, 0x4e, 0x1f, 0xec,
	0x9a, 0x94, 0x6f, 0x8f, 0x99, 0x47, 0x95, 0xde, 0x80, 0x74, 0xe0, 0x79, 0xa2, 0xd4, 0x85, 0xd0,
	0x52, 0x07, 0xd0, 0x81, 0x32, 0x07, 0xe1, 0xa8, 0x0a, 0x0b, 0xd4, 0x1a, 0xda, 0xb4, 0x4d, 0x5a,
	0x3d, 0xca, 0x78, 0x48, 0xb9, 0x47, 0x74, 0xcb, 0xc5, 0x86, 0xbf, 0x71, 0x83, 0x32, 0x8e, 0xd3,
	0x74, 0x6c, 0xa0, 0xcf, 0x01, 0xdc, 0x5d, 0x94, 0x9b, 0xc4, 0xe2, 0xa2, 0xe8, 0xb7, 0x43, 0x23,
	0xaa, 0x1e, 0x6f, 0xc3, 0x01, 0x08, 0xba, 0x0b, 0xf3, 0x1d, 0xd2, 0x19, 0xf4, 0x89, 0x2b, 0xde,
	0x58, 0x41, 0x5a, 0x5a, 0x50, 0x93, 0x47, 0x6a, 0xec, 0x30, 0x92, 0xfb, 0x02, 0xa7, 0xfc, 0x95,
	0x46, 0x47, 0xf9, 0x2b, 0x0a, 0x37, 0x42, 0xd2, 0x22, 0x8a, 0x8d, 0x27, 0x8a, 0xfd, 0xe4, 0xec,
	0x02, 0x9d, 0x49, 0x32, 0x59, 0xf3, 0x3a, 0xcc, 0x33, 0xda, 0xb5, 0x0c, 0x3e, 0x70, 0x88, 0x48,
	0xcd, 0xfd, 0x8b, 0x32, 0xad, 0x8f, 0x00, 0x78, 0x8c, 0x45, 0x18, 0xb2, 0xc1, 0xfb, 0x8b, 0x38,
	0x8e, 0xed, 0x88, 0x5e, 0x7b, 0xef, 0x22, 0x42, 0xcd, 0xdd, 0x8c, 0x65, 0x3e, 0xe1, 0x41, 0x6b,
	0xb0, 0x38, 0x2a, 0x9d, 0xc7, 0xc7, 0x72, 0x31, 0x4f, 0x99, 0x77, 0xce, 0x2b, 0x9e, 0x4f, 0x96,
	0xa1, 0x01, 0x8b, 0x29, 0x7b, 0xa7, 0x04, 0x79, 0x15, 0xb2, 0x95, 0x0d, 0xac, 0x55, 0x6a, 0x2f,
	0x5a, 0xfa, 0x8e, 0xfa, 0xb4, 0xb1, 0xbd, 0xad, 0xd5, 0x64, 0x09, 0x01, 0x24, 0x56, 0x2b, 0x8d,
	0x0d, 0xad, 0x26, 0x47, 0xd0, 0x02, 0xa4, 0xb0, 0xf6, 0xa5, 0x56, 0x75, 0x57, 0xa2, 0x28, 0x0b,
	0x99, 0x46, 0xf3, 0xf9, 0x66, 0xa3, 0xaa, 0xb5, 0x34, 0x8c, 0x37, 0xb1, 0x1c, 0x43, 0x08, 0x16,
	0xb7, 0x2a, 0x2f, 0x34, 0xdc, 0xc2, 0xda, 0xb3, 0x9d, 0x06, 0xd6, 0x6a, 0x72, 0x5c, 0xf9, 0x53,
	0x82, 0xab, 0x75, 0x12, 0x26, 0x6b, 0x1d, 0x16, 0x83, 0x19, 0x3a, 0x6e, 0x62, 0xca, 0x45, 0xe9,
	0x39, 0xd1, 0xc2, 0x32, 0x3c, 0xb8, 0x30, 0x21, 0xcc, 0xc8, 0xcc, 0xc2, 0x54, 0x7e, 0x8d, 0xc0,
	0xb5, 0xc9, 0x78, 0x85, 0xde, 0x36, 0x20, 0xce, 0xb8, 0xc1, 0x89, 0x90, 0xdb, 0xa3, 0x73, 0x7b,
	0x4b, 0x98, 0xd6, 0x74, 0x17, 0x8d, 0x7d, 0x12, 0x74, 0x0d, 0x62, 0xac, 0x67, 0xfb, 0x31, 0xc6,
	0xd4, 0xc8, 0x43, 0x09, 0x7b, 0x36, 0xba, 0x0b, 0x99, 0xb6, 0x3b, 0x54, 0x38, 0xa6, 0xe1, 0x82,
	0x99, 0x27, 0x9a, 0x0c, 0x3e, 0xe9, 0x44, 0x9f, 0x40, 0xcc, 0x6d, 0x2d, 0xde, 0xab, 0x33, 0x6d,
	0x6b, 0xc2, 0x1e, 0x44, 0x79, 0x02, 0x71, 0x2f, 0x10, 0x94, 0x86, 0xe4, 0x4e, 0x73, 0xbd, 0xb9,
	0xf9, 0x55, 0x53, 0x9e, 0x73, 0x0d, 0x7d, 0xa7, 0x5a, 0xd5, 0x74, 0x7d, 0xa2, 0xea, 0x69, 0x48,
	0x6e, 0x69, 0xcd, 0x5a, 0xa3, 0x59, 0x97, 0xa3, 0xca, 0x2f, 0x09, 0x48, 0x07, 0x18, 0xff, 0x9b,
	0x1a, 0x5e, 0xfe, 0x2a, 0x7a, 0x06, 0x88, 0x79, 0x97, 0x5d, 0x2b, 0xd8, 0x30, 0xa3, 0xd3, 0x35,
	0xcc, 0xb5, 0x39, 0x9c, 0xf5, 0xd1, 0x01, 0x27, 0x7a, 0x09, 0xff, 0x67, 0x9c, 0xf4, 0x7a, 0x86,
	0x73, 0x82, 0xd3, 0xcf, 0xfb, 0x7b, 0xe1, 0xf7, 0xad, 0xbf, 0xff, 0x24, 0x35, 0x62, 0xa7, 0xbc,
	0xe1, 0x3d, 0x22, 0xfe, 0x76, 0x3d, 0xa2, 0x01, 0xa9, 0xbe, 0x71, 0xe0, 0x4a, 0x99, 0xe5, 0x12,
	0x5e, 0x77, 0x78, 0x30, 0x95, 0x38, 0x8a, 0x5b, 0x3e, 0x0a, 0x1f, 0xc3, 0x4f, 0xdd, 0x14, 0xc9,
	0x4b, 0xdc, 0x14, 0xf9, 0x7f, 0x24, 0x48, 0x0a, 0x6a, 0xb4, 0x0a, 0x09, 0x66, 0x0f, 0x9c, 0x36,
	0xb9, 0xe4, 0xb8, 0x22, 0xd0, 0x68, 0x0b, 0xd2, 0x1d, 0xc2, 0x38, 0xb5, 0xbc, 0x97, 0xe1, 0x92,
	0xe3, 0x70, 0x90, 0x02, 0x5d, 0x83, 0x84, 0x61, 0x7a, 0xb3, 0xba, 0x2b, 0x96, 0x28, 0x16, 0x16,
	0xba, 0x02, 0x71, 0x6a, 0x75, 0xc8, 0x2b, 0xaf, 0xde, 0x19, 0xec, 0x1b, 0x6a, 0x16, 0xfe, 0xe7,
	0x18, 0xdf, 0x06, 0xf5, 0xa0, 0xbc, 0x0f, 0x09, 0x5f, 0x8b, 0xa8, 0x00, 0xf1, 0xa1, 0xd1, 0x1b,
	0xf8, 0x67, 0x5c, 0x50, 0xe1, 0x48, 0x4d, 0x1e, 0xc6, 0x65, 0x29, 0xe7, 0x4e, 0x03, 0xde, 0x42,
	0xf9, 0xb7, 0x24, 0xa4, 0x83, 0x32, 0x38, 0x00, 0x79, 0xf2, 0x83, 0x02, 0x7d, 0x74, 0x6e, 0x73,
	0x09, 0xfb, 0x30, 0xc9, 0x97, 0x67, 0x81, 0x88, 0x96, 0xf6, 0x5a, 0x82, 0x2b, 0x61, 0x13, 0x3a,
	0x3a, 0x7f, 0x82, 0x3b, 0x6b, 0xe0, 0xcf, 0x3f, 0x9a, 0x15, 0x26, 0xe2, 0xf8, 0xde, 0x9b, 0xe6,
	0x26, 0x26, 0x7a, 0x74, 0xfe, 0xf4, 0x16, 0xfe, 0x71, 0x90, 0x5f, 0x99, 0x0d, 0x24, 0x02, 0xf8,
	0x43, 0x82, 0x3b, 0x17, 0x4e, 0xeb, 0x48, 0x9d, 0xe6, 0x78, 0xe7, 0x7f, 0x2a, 0xe4, 0xab, 0x6f,
	0xc5, 0x21, 0xc2, 0xed, 0x02, 0x8c, 0xe7, 0x57, 0xf4, 0xc1, 0x0c, 0xe3, 0x76, 0xfe, 0xc3, 0x59,
	0x46, 0x62, 0xf4, 0x1d, 0x64, 0x4f, 0xcd, 0x4e, 0xa8, 0x3c, 0xd3, 0xa0, 0xe5, 0x3f, 0x76, 0xf9,
	0x12, 0xc3, 0x19, 0x62, 0xb0, 0x78, 0xf2, 0x2a, 0x45, 0xa5, 0xe9, 0x2f, 0x5d, 0xff, 0xb9, 0x0f,
	0x67, 0xbd, 0xa5, 0xd5, 0xd7, 0x12, 0x14, 0x6c, 0xa7, 0x1b, 0xc0, 0x75, 0x89, 0x35, 0x81, 0x7d,
	0xd9, 0xec, 0x52, 0xbe, 0x37, 0xd8, 0x75, 0x3b, 0x4d, 0x69, 0x9f, 0x5a, 0xa4, 0x6d, 0xb3, 0x03,
	0xc6, 0x89, 0x59, 0xf2, 0x10, 0x0f, 0x8c, 0x3e, 0x7d, 0x40, 0x2d, 0x4e, 0x1c, 0xcb, 0xe8, 0x95,
	0xba, 0xc4, 0xf2, 0xfe, 0x55, 0x28, 0x9d, 0xfc, 0x7f, 0xe3, 0xd3, 0x80, 0xf9, 0x7b, 0x44, 0xae,
	0x6c, 0xa9, 0x81, 0x68, 0x9e, 0xaf, 0xec, 0x26, 0x3c, 0xd0, 0xf2, 0xbf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x4b, 0x2d, 0x06, 0x53, 0x17, 0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransactionClient is the client API for Transaction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionClient interface {
	// GetServiceConfig returns the service and token parameters for the token.
	GetServiceConfig(ctx context.Context, in *GetServiceConfigRequest, opts ...grpc.CallOption) (*GetServiceConfigResponse, error)
	// GetMinimumKinVersion returns the minimum Kin version that is supported.
	//
	// This version will _never_ decrease in non-test scenarios, as it indicates
	// a global migration has occured.
	GetMinimumKinVersion(ctx context.Context, in *GetMinimumKinVersionRequest, opts ...grpc.CallOption) (*GetMinimumKinVersionResponse, error)
	// GetRecentBlockhash returns a recent block hash from the underlying network,
	// which should be used when crafting transactions. If a transaction fails with
	// DuplicateSignature or InvalidNonce, it is recommended that a new block hash
	// is retrieved.
	//
	// Block hashes are expected to be valid for ~2 minutes.
	GetRecentBlockhash(ctx context.Context, in *GetRecentBlockhashRequest, opts ...grpc.CallOption) (*GetRecentBlockhashResponse, error)
	// GetMinimumBalanceForRentExemption returns the minimum amount of lamports that
	// must be in an account for it not to be garbage collected.
	GetMinimumBalanceForRentExemption(ctx context.Context, in *GetMinimumBalanceForRentExemptionRequest, opts ...grpc.CallOption) (*GetMinimumBalanceForRentExemptionResponse, error)
	// GetHistory returns the transaction history for an account,
	// with additional off-chain invoice data, if available.
	GetHistory(ctx context.Context, in *GetHistoryRequest, opts ...grpc.CallOption) (*GetHistoryResponse, error)
	// SubmitTransaction submits a transaction.
	//
	// The transaction may include a single Memo[1] instruction.
	// If a memo instruction is specified, it must be at position 0
	// in the instruction array.
	//
	// If an invoice is provided, the Memo instruction must contain a
	// Kin Binary memo[2], encoded as base64.
	//
	// [1]: https://spl.solana.com/memo
	// [2]: https://github.com/kinecosystem/agora-api/blob/master/spec/memo.md
	SubmitTransaction(ctx context.Context, in *SubmitTransactionRequest, opts ...grpc.CallOption) (*SubmitTransactionResponse, error)
	// GetTransaction returns a transaction and additional off-chain invoice data, if available.
	GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionResponse, error)
}

type transactionClient struct {
	cc *grpc.ClientConn
}

func NewTransactionClient(cc *grpc.ClientConn) TransactionClient {
	return &transactionClient{cc}
}

func (c *transactionClient) GetServiceConfig(ctx context.Context, in *GetServiceConfigRequest, opts ...grpc.CallOption) (*GetServiceConfigResponse, error) {
	out := new(GetServiceConfigResponse)
	err := c.cc.Invoke(ctx, "/kin.agora.transaction.v4.Transaction/GetServiceConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) GetMinimumKinVersion(ctx context.Context, in *GetMinimumKinVersionRequest, opts ...grpc.CallOption) (*GetMinimumKinVersionResponse, error) {
	out := new(GetMinimumKinVersionResponse)
	err := c.cc.Invoke(ctx, "/kin.agora.transaction.v4.Transaction/GetMinimumKinVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) GetRecentBlockhash(ctx context.Context, in *GetRecentBlockhashRequest, opts ...grpc.CallOption) (*GetRecentBlockhashResponse, error) {
	out := new(GetRecentBlockhashResponse)
	err := c.cc.Invoke(ctx, "/kin.agora.transaction.v4.Transaction/GetRecentBlockhash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) GetMinimumBalanceForRentExemption(ctx context.Context, in *GetMinimumBalanceForRentExemptionRequest, opts ...grpc.CallOption) (*GetMinimumBalanceForRentExemptionResponse, error) {
	out := new(GetMinimumBalanceForRentExemptionResponse)
	err := c.cc.Invoke(ctx, "/kin.agora.transaction.v4.Transaction/GetMinimumBalanceForRentExemption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) GetHistory(ctx context.Context, in *GetHistoryRequest, opts ...grpc.CallOption) (*GetHistoryResponse, error) {
	out := new(GetHistoryResponse)
	err := c.cc.Invoke(ctx, "/kin.agora.transaction.v4.Transaction/GetHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) SubmitTransaction(ctx context.Context, in *SubmitTransactionRequest, opts ...grpc.CallOption) (*SubmitTransactionResponse, error) {
	out := new(SubmitTransactionResponse)
	err := c.cc.Invoke(ctx, "/kin.agora.transaction.v4.Transaction/SubmitTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionResponse, error) {
	out := new(GetTransactionResponse)
	err := c.cc.Invoke(ctx, "/kin.agora.transaction.v4.Transaction/GetTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransactionServer is the server API for Transaction service.
type TransactionServer interface {
	// GetServiceConfig returns the service and token parameters for the token.
	GetServiceConfig(context.Context, *GetServiceConfigRequest) (*GetServiceConfigResponse, error)
	// GetMinimumKinVersion returns the minimum Kin version that is supported.
	//
	// This version will _never_ decrease in non-test scenarios, as it indicates
	// a global migration has occured.
	GetMinimumKinVersion(context.Context, *GetMinimumKinVersionRequest) (*GetMinimumKinVersionResponse, error)
	// GetRecentBlockhash returns a recent block hash from the underlying network,
	// which should be used when crafting transactions. If a transaction fails with
	// DuplicateSignature or InvalidNonce, it is recommended that a new block hash
	// is retrieved.
	//
	// Block hashes are expected to be valid for ~2 minutes.
	GetRecentBlockhash(context.Context, *GetRecentBlockhashRequest) (*GetRecentBlockhashResponse, error)
	// GetMinimumBalanceForRentExemption returns the minimum amount of lamports that
	// must be in an account for it not to be garbage collected.
	GetMinimumBalanceForRentExemption(context.Context, *GetMinimumBalanceForRentExemptionRequest) (*GetMinimumBalanceForRentExemptionResponse, error)
	// GetHistory returns the transaction history for an account,
	// with additional off-chain invoice data, if available.
	GetHistory(context.Context, *GetHistoryRequest) (*GetHistoryResponse, error)
	// SubmitTransaction submits a transaction.
	//
	// The transaction may include a single Memo[1] instruction.
	// If a memo instruction is specified, it must be at position 0
	// in the instruction array.
	//
	// If an invoice is provided, the Memo instruction must contain a
	// Kin Binary memo[2], encoded as base64.
	//
	// [1]: https://spl.solana.com/memo
	// [2]: https://github.com/kinecosystem/agora-api/blob/master/spec/memo.md
	SubmitTransaction(context.Context, *SubmitTransactionRequest) (*SubmitTransactionResponse, error)
	// GetTransaction returns a transaction and additional off-chain invoice data, if available.
	GetTransaction(context.Context, *GetTransactionRequest) (*GetTransactionResponse, error)
}

// UnimplementedTransactionServer can be embedded to have forward compatible implementations.
type UnimplementedTransactionServer struct {
}

func (*UnimplementedTransactionServer) GetServiceConfig(ctx context.Context, req *GetServiceConfigRequest) (*GetServiceConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceConfig not implemented")
}
func (*UnimplementedTransactionServer) GetMinimumKinVersion(ctx context.Context, req *GetMinimumKinVersionRequest) (*GetMinimumKinVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMinimumKinVersion not implemented")
}
func (*UnimplementedTransactionServer) GetRecentBlockhash(ctx context.Context, req *GetRecentBlockhashRequest) (*GetRecentBlockhashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecentBlockhash not implemented")
}
func (*UnimplementedTransactionServer) GetMinimumBalanceForRentExemption(ctx context.Context, req *GetMinimumBalanceForRentExemptionRequest) (*GetMinimumBalanceForRentExemptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMinimumBalanceForRentExemption not implemented")
}
func (*UnimplementedTransactionServer) GetHistory(ctx context.Context, req *GetHistoryRequest) (*GetHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHistory not implemented")
}
func (*UnimplementedTransactionServer) SubmitTransaction(ctx context.Context, req *SubmitTransactionRequest) (*SubmitTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitTransaction not implemented")
}
func (*UnimplementedTransactionServer) GetTransaction(ctx context.Context, req *GetTransactionRequest) (*GetTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransaction not implemented")
}

func RegisterTransactionServer(s *grpc.Server, srv TransactionServer) {
	s.RegisterService(&_Transaction_serviceDesc, srv)
}

func _Transaction_GetServiceConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).GetServiceConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kin.agora.transaction.v4.Transaction/GetServiceConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).GetServiceConfig(ctx, req.(*GetServiceConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_GetMinimumKinVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMinimumKinVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).GetMinimumKinVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kin.agora.transaction.v4.Transaction/GetMinimumKinVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).GetMinimumKinVersion(ctx, req.(*GetMinimumKinVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_GetRecentBlockhash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecentBlockhashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).GetRecentBlockhash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kin.agora.transaction.v4.Transaction/GetRecentBlockhash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).GetRecentBlockhash(ctx, req.(*GetRecentBlockhashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_GetMinimumBalanceForRentExemption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMinimumBalanceForRentExemptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).GetMinimumBalanceForRentExemption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kin.agora.transaction.v4.Transaction/GetMinimumBalanceForRentExemption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).GetMinimumBalanceForRentExemption(ctx, req.(*GetMinimumBalanceForRentExemptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_GetHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).GetHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kin.agora.transaction.v4.Transaction/GetHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).GetHistory(ctx, req.(*GetHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_SubmitTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).SubmitTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kin.agora.transaction.v4.Transaction/SubmitTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).SubmitTransaction(ctx, req.(*SubmitTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_GetTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).GetTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kin.agora.transaction.v4.Transaction/GetTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).GetTransaction(ctx, req.(*GetTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Transaction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kin.agora.transaction.v4.Transaction",
	HandlerType: (*TransactionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetServiceConfig",
			Handler:    _Transaction_GetServiceConfig_Handler,
		},
		{
			MethodName: "GetMinimumKinVersion",
			Handler:    _Transaction_GetMinimumKinVersion_Handler,
		},
		{
			MethodName: "GetRecentBlockhash",
			Handler:    _Transaction_GetRecentBlockhash_Handler,
		},
		{
			MethodName: "GetMinimumBalanceForRentExemption",
			Handler:    _Transaction_GetMinimumBalanceForRentExemption_Handler,
		},
		{
			MethodName: "GetHistory",
			Handler:    _Transaction_GetHistory_Handler,
		},
		{
			MethodName: "SubmitTransaction",
			Handler:    _Transaction_SubmitTransaction_Handler,
		},
		{
			MethodName: "GetTransaction",
			Handler:    _Transaction_GetTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction/v4/transaction_service.proto",
}
