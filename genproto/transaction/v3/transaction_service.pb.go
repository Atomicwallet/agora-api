// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transaction/v3/transaction_service.proto

package transaction

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	v3 "github.com/kinecosystem/agora-api/genproto/common/v3"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetHistoryRequest_Direction int32

const (
	// ASC direction returns all history items in
	// ascending (based on chain order) from the cursor.
	GetHistoryRequest_ASC GetHistoryRequest_Direction = 0
	// DESC direction returns all history items in
	// descending (based on chain order) from _before_ the cursor.
	GetHistoryRequest_DESC GetHistoryRequest_Direction = 1
)

var GetHistoryRequest_Direction_name = map[int32]string{
	0: "ASC",
	1: "DESC",
}

var GetHistoryRequest_Direction_value = map[string]int32{
	"ASC":  0,
	"DESC": 1,
}

func (x GetHistoryRequest_Direction) String() string {
	return proto.EnumName(GetHistoryRequest_Direction_name, int32(x))
}

func (GetHistoryRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_67d4eb25f503063e, []int{0, 0}
}

type GetHistoryResponse_Result int32

const (
	GetHistoryResponse_OK        GetHistoryResponse_Result = 0
	GetHistoryResponse_NOT_FOUND GetHistoryResponse_Result = 1
)

var GetHistoryResponse_Result_name = map[int32]string{
	0: "OK",
	1: "NOT_FOUND",
}

var GetHistoryResponse_Result_value = map[string]int32{
	"OK":        0,
	"NOT_FOUND": 1,
}

func (x GetHistoryResponse_Result) String() string {
	return proto.EnumName(GetHistoryResponse_Result_name, int32(x))
}

func (GetHistoryResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_67d4eb25f503063e, []int{1, 0}
}

type SubmitTransactionResponse_Result int32

const (
	SubmitTransactionResponse_OK SubmitTransactionResponse_Result = 0
	// There was an issue with submitting the transaction
	// to the underlying chain. Clients should retry with
	// a rebuilt transaction in case there is temporal
	// issues with the transaction, such as sequence number,
	// or some other chain-specific errors. The detail of
	// the error is present in the result xdr.
	SubmitTransactionResponse_FAILED SubmitTransactionResponse_Result = 1
	// Indicates that the configured webhook for this transaction
	// rejected the transaction without a specified reason.
	SubmitTransactionResponse_REJECTED SubmitTransactionResponse_Result = 2
	// Indicates there was an error with one or more of the
	// supplied invoices.
	//
	// See: invoice_errors.
	SubmitTransactionResponse_INVOICE_ERROR SubmitTransactionResponse_Result = 3
)

var SubmitTransactionResponse_Result_name = map[int32]string{
	0: "OK",
	1: "FAILED",
	2: "REJECTED",
	3: "INVOICE_ERROR",
}

var SubmitTransactionResponse_Result_value = map[string]int32{
	"OK":            0,
	"FAILED":        1,
	"REJECTED":      2,
	"INVOICE_ERROR": 3,
}

func (x SubmitTransactionResponse_Result) String() string {
	return proto.EnumName(SubmitTransactionResponse_Result_name, int32(x))
}

func (SubmitTransactionResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_67d4eb25f503063e, []int{3, 0}
}

type SubmitTransactionResponse_InvoiceError_Reason int32

const (
	SubmitTransactionResponse_InvoiceError_UNKNOWN SubmitTransactionResponse_InvoiceError_Reason = 0
	// The provided invoice has already been paid for.
	//
	// This is only applicable when the memo transaction type
	// is SPEND.
	SubmitTransactionResponse_InvoiceError_ALREADY_PAID SubmitTransactionResponse_InvoiceError_Reason = 1
	// The destination in the operation corresponding to this invoice
	// is incorrect.
	SubmitTransactionResponse_InvoiceError_WRONG_DESTINATION SubmitTransactionResponse_InvoiceError_Reason = 2
	// One or more SKUs in the invoice was not found.
	SubmitTransactionResponse_InvoiceError_SKU_NOT_FOUND SubmitTransactionResponse_InvoiceError_Reason = 3
)

var SubmitTransactionResponse_InvoiceError_Reason_name = map[int32]string{
	0: "UNKNOWN",
	1: "ALREADY_PAID",
	2: "WRONG_DESTINATION",
	3: "SKU_NOT_FOUND",
}

var SubmitTransactionResponse_InvoiceError_Reason_value = map[string]int32{
	"UNKNOWN":           0,
	"ALREADY_PAID":      1,
	"WRONG_DESTINATION": 2,
	"SKU_NOT_FOUND":     3,
}

func (x SubmitTransactionResponse_InvoiceError_Reason) String() string {
	return proto.EnumName(SubmitTransactionResponse_InvoiceError_Reason_name, int32(x))
}

func (SubmitTransactionResponse_InvoiceError_Reason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_67d4eb25f503063e, []int{3, 0, 0}
}

type GetTransactionResponse_State int32

const (
	GetTransactionResponse_UNKNOWN GetTransactionResponse_State = 0
	GetTransactionResponse_SUCCESS GetTransactionResponse_State = 1
)

var GetTransactionResponse_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
}

var GetTransactionResponse_State_value = map[string]int32{
	"UNKNOWN": 0,
	"SUCCESS": 1,
}

func (x GetTransactionResponse_State) String() string {
	return proto.EnumName(GetTransactionResponse_State_name, int32(x))
}

func (GetTransactionResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_67d4eb25f503063e, []int{5, 0}
}

type GetHistoryRequest struct {
	// Account to get history for.
	AccountId *v3.StellarAccountId `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// An optional history cursor indicating where in
	// the history to 'resume' from.
	Cursor *Cursor `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// The order in which to return history items from
	// the cursor.
	Direction            GetHistoryRequest_Direction `protobuf:"varint,3,opt,name=direction,proto3,enum=kin.agora.transaction.v3.GetHistoryRequest_Direction" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *GetHistoryRequest) Reset()         { *m = GetHistoryRequest{} }
func (m *GetHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetHistoryRequest) ProtoMessage()    {}
func (*GetHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67d4eb25f503063e, []int{0}
}

func (m *GetHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHistoryRequest.Unmarshal(m, b)
}
func (m *GetHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHistoryRequest.Marshal(b, m, deterministic)
}
func (m *GetHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHistoryRequest.Merge(m, src)
}
func (m *GetHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetHistoryRequest.Size(m)
}
func (m *GetHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHistoryRequest proto.InternalMessageInfo

func (m *GetHistoryRequest) GetAccountId() *v3.StellarAccountId {
	if m != nil {
		return m.AccountId
	}
	return nil
}

func (m *GetHistoryRequest) GetCursor() *Cursor {
	if m != nil {
		return m.Cursor
	}
	return nil
}

func (m *GetHistoryRequest) GetDirection() GetHistoryRequest_Direction {
	if m != nil {
		return m.Direction
	}
	return GetHistoryRequest_ASC
}

type GetHistoryResponse struct {
	Result               GetHistoryResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=kin.agora.transaction.v3.GetHistoryResponse_Result" json:"result,omitempty"`
	Items                []*HistoryItem            `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetHistoryResponse) Reset()         { *m = GetHistoryResponse{} }
func (m *GetHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetHistoryResponse) ProtoMessage()    {}
func (*GetHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67d4eb25f503063e, []int{1}
}

func (m *GetHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHistoryResponse.Unmarshal(m, b)
}
func (m *GetHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHistoryResponse.Marshal(b, m, deterministic)
}
func (m *GetHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHistoryResponse.Merge(m, src)
}
func (m *GetHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetHistoryResponse.Size(m)
}
func (m *GetHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetHistoryResponse proto.InternalMessageInfo

func (m *GetHistoryResponse) GetResult() GetHistoryResponse_Result {
	if m != nil {
		return m.Result
	}
	return GetHistoryResponse_OK
}

func (m *GetHistoryResponse) GetItems() []*HistoryItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type SubmitTransactionRequest struct {
	// The raw XDR bytes (not base64-encoded) of the transaction envelope.
	EnvelopeXdr []byte `protobuf:"bytes,1,opt,name=envelope_xdr,json=envelopeXdr,proto3" json:"envelope_xdr,omitempty"`
	// An optional invoice list associating each operation with an invoice.
	//
	// If an invoice list is included, it is expected that the foreign key in
	// the transaction memo is the SHA-224 hash of the serialized invoice list.
	//
	// The invoice list will be included in webhook calls for the application the
	// transaction pertains to (as specified by the memo app index).
	//
	// The submitted invoice data will only be available for retrieval from the service it
	// was submitted to and not directly from the blockchain nor any other deployments of
	// the service.
	InvoiceList          *v3.InvoiceList `protobuf:"bytes,2,opt,name=invoice_list,json=invoiceList,proto3" json:"invoice_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SubmitTransactionRequest) Reset()         { *m = SubmitTransactionRequest{} }
func (m *SubmitTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionRequest) ProtoMessage()    {}
func (*SubmitTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67d4eb25f503063e, []int{2}
}

func (m *SubmitTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionRequest.Unmarshal(m, b)
}
func (m *SubmitTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SubmitTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionRequest.Merge(m, src)
}
func (m *SubmitTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionRequest.Size(m)
}
func (m *SubmitTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionRequest proto.InternalMessageInfo

func (m *SubmitTransactionRequest) GetEnvelopeXdr() []byte {
	if m != nil {
		return m.EnvelopeXdr
	}
	return nil
}

func (m *SubmitTransactionRequest) GetInvoiceList() *v3.InvoiceList {
	if m != nil {
		return m.InvoiceList
	}
	return nil
}

type SubmitTransactionResponse struct {
	Result SubmitTransactionResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=kin.agora.transaction.v3.SubmitTransactionResponse_Result" json:"result,omitempty"`
	// Present when result = INVOICE_ERROR.
	InvoiceErrors []*SubmitTransactionResponse_InvoiceError `protobuf:"bytes,2,rep,name=invoice_errors,json=invoiceErrors,proto3" json:"invoice_errors,omitempty"`
	// The hash of the transaction, if it was submitted.
	// May be used for other RPCs.
	Hash *v3.TransactionHash `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	// The ledger in which the submitted transaction was included in.
	//
	// Non-zero on success.
	Ledger int64 `protobuf:"varint,4,opt,name=ledger,proto3" json:"ledger,omitempty"`
	// The transaction result XDR, if a transaction was submitted.
	ResultXdr            []byte   `protobuf:"bytes,5,opt,name=result_xdr,json=resultXdr,proto3" json:"result_xdr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitTransactionResponse) Reset()         { *m = SubmitTransactionResponse{} }
func (m *SubmitTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionResponse) ProtoMessage()    {}
func (*SubmitTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67d4eb25f503063e, []int{3}
}

func (m *SubmitTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionResponse.Unmarshal(m, b)
}
func (m *SubmitTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionResponse.Marshal(b, m, deterministic)
}
func (m *SubmitTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionResponse.Merge(m, src)
}
func (m *SubmitTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionResponse.Size(m)
}
func (m *SubmitTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionResponse proto.InternalMessageInfo

func (m *SubmitTransactionResponse) GetResult() SubmitTransactionResponse_Result {
	if m != nil {
		return m.Result
	}
	return SubmitTransactionResponse_OK
}

func (m *SubmitTransactionResponse) GetInvoiceErrors() []*SubmitTransactionResponse_InvoiceError {
	if m != nil {
		return m.InvoiceErrors
	}
	return nil
}

func (m *SubmitTransactionResponse) GetHash() *v3.TransactionHash {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *SubmitTransactionResponse) GetLedger() int64 {
	if m != nil {
		return m.Ledger
	}
	return 0
}

func (m *SubmitTransactionResponse) GetResultXdr() []byte {
	if m != nil {
		return m.ResultXdr
	}
	return nil
}

type SubmitTransactionResponse_InvoiceError struct {
	// The operation index the invoice corresponds to.
	OpIndex uint32 `protobuf:"varint,1,opt,name=op_index,json=opIndex,proto3" json:"op_index,omitempty"`
	// The invoice that was submitted.
	Invoice              *v3.Invoice                                   `protobuf:"bytes,2,opt,name=invoice,proto3" json:"invoice,omitempty"`
	Reason               SubmitTransactionResponse_InvoiceError_Reason `protobuf:"varint,3,opt,name=reason,proto3,enum=kin.agora.transaction.v3.SubmitTransactionResponse_InvoiceError_Reason" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *SubmitTransactionResponse_InvoiceError) Reset() {
	*m = SubmitTransactionResponse_InvoiceError{}
}
func (m *SubmitTransactionResponse_InvoiceError) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionResponse_InvoiceError) ProtoMessage()    {}
func (*SubmitTransactionResponse_InvoiceError) Descriptor() ([]byte, []int) {
	return fileDescriptor_67d4eb25f503063e, []int{3, 0}
}

func (m *SubmitTransactionResponse_InvoiceError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionResponse_InvoiceError.Unmarshal(m, b)
}
func (m *SubmitTransactionResponse_InvoiceError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionResponse_InvoiceError.Marshal(b, m, deterministic)
}
func (m *SubmitTransactionResponse_InvoiceError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionResponse_InvoiceError.Merge(m, src)
}
func (m *SubmitTransactionResponse_InvoiceError) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionResponse_InvoiceError.Size(m)
}
func (m *SubmitTransactionResponse_InvoiceError) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionResponse_InvoiceError.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionResponse_InvoiceError proto.InternalMessageInfo

func (m *SubmitTransactionResponse_InvoiceError) GetOpIndex() uint32 {
	if m != nil {
		return m.OpIndex
	}
	return 0
}

func (m *SubmitTransactionResponse_InvoiceError) GetInvoice() *v3.Invoice {
	if m != nil {
		return m.Invoice
	}
	return nil
}

func (m *SubmitTransactionResponse_InvoiceError) GetReason() SubmitTransactionResponse_InvoiceError_Reason {
	if m != nil {
		return m.Reason
	}
	return SubmitTransactionResponse_InvoiceError_UNKNOWN
}

type GetTransactionRequest struct {
	TransactionHash      *v3.TransactionHash `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetTransactionRequest) Reset()         { *m = GetTransactionRequest{} }
func (m *GetTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionRequest) ProtoMessage()    {}
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67d4eb25f503063e, []int{4}
}

func (m *GetTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionRequest.Unmarshal(m, b)
}
func (m *GetTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionRequest.Merge(m, src)
}
func (m *GetTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionRequest.Size(m)
}
func (m *GetTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionRequest proto.InternalMessageInfo

func (m *GetTransactionRequest) GetTransactionHash() *v3.TransactionHash {
	if m != nil {
		return m.TransactionHash
	}
	return nil
}

type GetTransactionResponse struct {
	// The state of the transaction. The states are the same as
	// SubmitTransaction, with the exception of UNKNOWN, which indicates
	// that the system does not have a record of the transaction. This
	// can occur if the transaction is still pending or if it has failed.
	//
	// If the transaction state is UNKNOWN for an extended period of
	// time, it is likely that it was dropped. As a result, clients
	// should limit the total times GetTransaction is called for a
	// an UNKNOWN transaction.
	State GetTransactionResponse_State `protobuf:"varint,1,opt,name=state,proto3,enum=kin.agora.transaction.v3.GetTransactionResponse_State" json:"state,omitempty"`
	// Non-zero when state == State::SUCCESS
	Ledger int64 `protobuf:"varint,2,opt,name=ledger,proto3" json:"ledger,omitempty"`
	// Present when state != State::UNKNOWN
	Item                 *HistoryItem `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetTransactionResponse) Reset()         { *m = GetTransactionResponse{} }
func (m *GetTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionResponse) ProtoMessage()    {}
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67d4eb25f503063e, []int{5}
}

func (m *GetTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionResponse.Unmarshal(m, b)
}
func (m *GetTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionResponse.Marshal(b, m, deterministic)
}
func (m *GetTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionResponse.Merge(m, src)
}
func (m *GetTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransactionResponse.Size(m)
}
func (m *GetTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionResponse proto.InternalMessageInfo

func (m *GetTransactionResponse) GetState() GetTransactionResponse_State {
	if m != nil {
		return m.State
	}
	return GetTransactionResponse_UNKNOWN
}

func (m *GetTransactionResponse) GetLedger() int64 {
	if m != nil {
		return m.Ledger
	}
	return 0
}

func (m *GetTransactionResponse) GetItem() *HistoryItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type HistoryItem struct {
	// The hash of the transaction.
	Hash *v3.TransactionHash `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Contains the transaction result from when the transaction was submitted
	ResultXdr []byte `protobuf:"bytes,2,opt,name=result_xdr,json=resultXdr,proto3" json:"result_xdr,omitempty"`
	// Contains the transaction envelope for the transaction.
	EnvelopeXdr []byte `protobuf:"bytes,3,opt,name=envelope_xdr,json=envelopeXdr,proto3" json:"envelope_xdr,omitempty"`
	// The cursor position of this item.
	Cursor *Cursor `protobuf:"bytes,4,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// If an invoice list was submitted with the transaction, and the transaction
	// was submitted via this instance of the service, this field will be set.
	InvoiceList          *v3.InvoiceList `protobuf:"bytes,5,opt,name=invoice_list,json=invoiceList,proto3" json:"invoice_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *HistoryItem) Reset()         { *m = HistoryItem{} }
func (m *HistoryItem) String() string { return proto.CompactTextString(m) }
func (*HistoryItem) ProtoMessage()    {}
func (*HistoryItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_67d4eb25f503063e, []int{6}
}

func (m *HistoryItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryItem.Unmarshal(m, b)
}
func (m *HistoryItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryItem.Marshal(b, m, deterministic)
}
func (m *HistoryItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryItem.Merge(m, src)
}
func (m *HistoryItem) XXX_Size() int {
	return xxx_messageInfo_HistoryItem.Size(m)
}
func (m *HistoryItem) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryItem.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryItem proto.InternalMessageInfo

func (m *HistoryItem) GetHash() *v3.TransactionHash {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *HistoryItem) GetResultXdr() []byte {
	if m != nil {
		return m.ResultXdr
	}
	return nil
}

func (m *HistoryItem) GetEnvelopeXdr() []byte {
	if m != nil {
		return m.EnvelopeXdr
	}
	return nil
}

func (m *HistoryItem) GetCursor() *Cursor {
	if m != nil {
		return m.Cursor
	}
	return nil
}

func (m *HistoryItem) GetInvoiceList() *v3.InvoiceList {
	if m != nil {
		return m.InvoiceList
	}
	return nil
}

type Cursor struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cursor) Reset()         { *m = Cursor{} }
func (m *Cursor) String() string { return proto.CompactTextString(m) }
func (*Cursor) ProtoMessage()    {}
func (*Cursor) Descriptor() ([]byte, []int) {
	return fileDescriptor_67d4eb25f503063e, []int{7}
}

func (m *Cursor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cursor.Unmarshal(m, b)
}
func (m *Cursor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cursor.Marshal(b, m, deterministic)
}
func (m *Cursor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cursor.Merge(m, src)
}
func (m *Cursor) XXX_Size() int {
	return xxx_messageInfo_Cursor.Size(m)
}
func (m *Cursor) XXX_DiscardUnknown() {
	xxx_messageInfo_Cursor.DiscardUnknown(m)
}

var xxx_messageInfo_Cursor proto.InternalMessageInfo

func (m *Cursor) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterEnum("kin.agora.transaction.v3.GetHistoryRequest_Direction", GetHistoryRequest_Direction_name, GetHistoryRequest_Direction_value)
	proto.RegisterEnum("kin.agora.transaction.v3.GetHistoryResponse_Result", GetHistoryResponse_Result_name, GetHistoryResponse_Result_value)
	proto.RegisterEnum("kin.agora.transaction.v3.SubmitTransactionResponse_Result", SubmitTransactionResponse_Result_name, SubmitTransactionResponse_Result_value)
	proto.RegisterEnum("kin.agora.transaction.v3.SubmitTransactionResponse_InvoiceError_Reason", SubmitTransactionResponse_InvoiceError_Reason_name, SubmitTransactionResponse_InvoiceError_Reason_value)
	proto.RegisterEnum("kin.agora.transaction.v3.GetTransactionResponse_State", GetTransactionResponse_State_name, GetTransactionResponse_State_value)
	proto.RegisterType((*GetHistoryRequest)(nil), "kin.agora.transaction.v3.GetHistoryRequest")
	proto.RegisterType((*GetHistoryResponse)(nil), "kin.agora.transaction.v3.GetHistoryResponse")
	proto.RegisterType((*SubmitTransactionRequest)(nil), "kin.agora.transaction.v3.SubmitTransactionRequest")
	proto.RegisterType((*SubmitTransactionResponse)(nil), "kin.agora.transaction.v3.SubmitTransactionResponse")
	proto.RegisterType((*SubmitTransactionResponse_InvoiceError)(nil), "kin.agora.transaction.v3.SubmitTransactionResponse.InvoiceError")
	proto.RegisterType((*GetTransactionRequest)(nil), "kin.agora.transaction.v3.GetTransactionRequest")
	proto.RegisterType((*GetTransactionResponse)(nil), "kin.agora.transaction.v3.GetTransactionResponse")
	proto.RegisterType((*HistoryItem)(nil), "kin.agora.transaction.v3.HistoryItem")
	proto.RegisterType((*Cursor)(nil), "kin.agora.transaction.v3.Cursor")
}

func init() {
	proto.RegisterFile("transaction/v3/transaction_service.proto", fileDescriptor_67d4eb25f503063e)
}

var fileDescriptor_67d4eb25f503063e = []byte{
	// 986 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x4d, 0x6f, 0xe3, 0x44,
	0x18, 0x8e, 0x9d, 0x38, 0x1f, 0x6f, 0xd2, 0xe2, 0x8e, 0x54, 0x08, 0x11, 0x82, 0x60, 0x81, 0x54,
	0x16, 0xd6, 0x59, 0x25, 0x02, 0x2d, 0x20, 0xa4, 0x8d, 0x13, 0x6f, 0x6b, 0x5a, 0x39, 0x65, 0x9c,
	0xee, 0x07, 0x17, 0xcb, 0x8d, 0x47, 0xa9, 0xb5, 0x89, 0x1d, 0x66, 0x26, 0xd1, 0x2e, 0xda, 0xc3,
	0x9e, 0x39, 0x70, 0xd8, 0x9f, 0xc0, 0x09, 0xf1, 0x37, 0xb8, 0xf2, 0x23, 0xb8, 0xf2, 0x17, 0x7a,
	0x42, 0xfe, 0x48, 0xe3, 0x7c, 0xb4, 0x6a, 0xba, 0x37, 0xcf, 0xc7, 0xf3, 0xcc, 0xbc, 0xcf, 0xfb,
	0x3e, 0xef, 0x18, 0x0e, 0x38, 0x75, 0x7c, 0xe6, 0x0c, 0xb8, 0x17, 0xf8, 0x8d, 0x59, 0xab, 0x91,
	0x1a, 0xda, 0x8c, 0xd0, 0x99, 0x37, 0x20, 0xea, 0x84, 0x06, 0x3c, 0x40, 0xd5, 0x17, 0x9e, 0xaf,
	0x3a, 0xc3, 0x80, 0x3a, 0x6a, 0x6a, 0x93, 0x3a, 0x6b, 0xd5, 0x3e, 0x98, 0x39, 0x23, 0xcf, 0x75,
	0x38, 0x69, 0xcc, 0x3f, 0x62, 0x48, 0x6d, 0x7f, 0x10, 0x8c, 0xc7, 0x31, 0xef, 0x38, 0x70, 0xc9,
	0x28, 0x9e, 0x56, 0xde, 0x8a, 0xb0, 0x77, 0x48, 0xf8, 0x91, 0xc7, 0x78, 0x40, 0x5f, 0x61, 0xf2,
	0xcb, 0x94, 0x30, 0x8e, 0x4c, 0x00, 0x67, 0x30, 0x08, 0xa6, 0x3e, 0xb7, 0x3d, 0xb7, 0x2a, 0xd4,
	0x85, 0x83, 0x72, 0xf3, 0x73, 0x75, 0x71, 0x68, 0xcc, 0xa5, 0xce, 0x5a, 0xaa, 0xc5, 0xc9, 0x68,
	0xe4, 0xd0, 0x76, 0xbc, 0xdb, 0x70, 0xb5, 0xe2, 0xa5, 0x26, 0xfd, 0x26, 0x88, 0xb2, 0x80, 0x4b,
	0xce, 0x7c, 0x12, 0x3d, 0x84, 0xfc, 0x60, 0x4a, 0x59, 0x40, 0xab, 0x62, 0xc4, 0x55, 0x57, 0xaf,
	0x0b, 0x40, 0xed, 0x44, 0xfb, 0x70, 0xb2, 0x1f, 0x59, 0x50, 0x72, 0x3d, 0x4a, 0xa2, 0xe5, 0x6a,
	0xb6, 0x2e, 0x1c, 0xec, 0x36, 0xbf, 0xbe, 0x1e, 0xbc, 0x16, 0x89, 0xda, 0x9d, 0x83, 0xf1, 0x82,
	0x47, 0xf9, 0x18, 0x4a, 0x57, 0xf3, 0xa8, 0x00, 0xd9, 0xb6, 0xd5, 0x91, 0x33, 0xa8, 0x08, 0xb9,
	0xae, 0x6e, 0x75, 0x64, 0x41, 0xf9, 0x47, 0x00, 0x94, 0xa6, 0x62, 0x93, 0xc0, 0x67, 0x04, 0x1d,
	0x43, 0x9e, 0x12, 0x36, 0x1d, 0xf1, 0x48, 0x91, 0xdd, 0x66, 0xeb, 0x76, 0x17, 0x89, 0xd1, 0x2a,
	0x8e, 0xa0, 0x38, 0xa1, 0x40, 0x47, 0x20, 0x79, 0x9c, 0x8c, 0x59, 0x55, 0xac, 0x67, 0x57, 0xd4,
	0x5d, 0xe1, 0x4a, 0x88, 0x0c, 0x4e, 0xc6, 0x5a, 0xf9, 0x52, 0x2b, 0xbe, 0x15, 0xa4, 0x62, 0x46,
	0x7e, 0x23, 0xe0, 0x98, 0x40, 0xf9, 0x04, 0xf2, 0x31, 0x37, 0xca, 0x83, 0xd8, 0x3b, 0x96, 0x33,
	0x68, 0x07, 0x4a, 0x66, 0xaf, 0x6f, 0x3f, 0xee, 0x9d, 0x99, 0x5d, 0x59, 0x50, 0x7e, 0x17, 0xa0,
	0x6a, 0x4d, 0xcf, 0xc7, 0x1e, 0xef, 0x2f, 0x98, 0xe7, 0xa9, 0xbe, 0x0f, 0x15, 0xe2, 0xcf, 0xc8,
	0x28, 0x98, 0x10, 0xfb, 0xa5, 0x4b, 0xa3, 0xd0, 0x2a, 0x1a, 0x5c, 0x6a, 0x85, 0x5f, 0x25, 0x59,
	0xa8, 0xbe, 0x39, 0xc5, 0xe5, 0xf9, 0xfa, 0x33, 0x97, 0xa2, 0x0e, 0x54, 0x3c, 0x7f, 0x16, 0x78,
	0x03, 0x62, 0x8f, 0x3c, 0xc6, 0x37, 0xe4, 0x73, 0x51, 0x1b, 0x46, 0xbc, 0xf1, 0xc4, 0x63, 0x1c,
	0x97, 0xbd, 0xc5, 0x40, 0xf9, 0x5b, 0x82, 0x0f, 0x37, 0x5c, 0x28, 0x91, 0x19, 0xaf, 0xc8, 0xfc,
	0xdd, 0xf5, 0xd2, 0x5c, 0x4b, 0xb2, 0xaa, 0xf6, 0x10, 0x76, 0xe7, 0xd7, 0x26, 0x94, 0x06, 0x74,
	0x2e, 0xfb, 0xa3, 0xbb, 0x70, 0x27, 0x71, 0xe9, 0x21, 0x11, 0xde, 0xf1, 0x52, 0x23, 0x86, 0x1e,
	0x42, 0xee, 0xc2, 0x61, 0x17, 0x51, 0xa9, 0x96, 0x9b, 0x9f, 0x6d, 0xd4, 0x25, 0xc5, 0x79, 0xe4,
	0xb0, 0x0b, 0x1c, 0x21, 0x50, 0x0d, 0xf2, 0x23, 0xe2, 0x0e, 0x09, 0xad, 0xe6, 0xea, 0xc2, 0x41,
	0x56, 0x13, 0x1f, 0x08, 0x38, 0x99, 0x41, 0x5f, 0x00, 0xc4, 0x81, 0x44, 0x29, 0x92, 0xd2, 0x29,
	0xca, 0x84, 0x29, 0x2a, 0xc5, 0xab, 0xcf, 0x5c, 0x5a, 0xfb, 0x53, 0x84, 0x4a, 0xfa, 0x82, 0x48,
	0x81, 0x62, 0x30, 0xb1, 0x3d, 0xdf, 0x25, 0x2f, 0x23, 0x41, 0x77, 0xb4, 0xc2, 0xa5, 0x96, 0xbb,
	0x27, 0x56, 0x5d, 0x5c, 0x08, 0x26, 0x46, 0x38, 0x8f, 0x1e, 0x41, 0x21, 0x09, 0x23, 0x49, 0xe8,
	0x47, 0x37, 0x25, 0x34, 0xe5, 0xf1, 0x39, 0x0c, 0xd9, 0x61, 0xd2, 0x1c, 0x76, 0x65, 0xd2, 0xc3,
	0x77, 0x15, 0x56, 0xc5, 0x11, 0x1d, 0x4e, 0x68, 0x95, 0x9f, 0xc2, 0x2a, 0x0f, 0xbf, 0x50, 0x19,
	0x0a, 0x67, 0xe6, 0xb1, 0xd9, 0x7b, 0x6a, 0xca, 0x19, 0x24, 0x43, 0xa5, 0x7d, 0x82, 0xf5, 0x76,
	0xf7, 0xb9, 0x7d, 0xda, 0x36, 0xba, 0xb2, 0x80, 0xf6, 0x61, 0xef, 0x29, 0xee, 0x99, 0x87, 0x76,
	0x57, 0xb7, 0xfa, 0x86, 0xd9, 0xee, 0x1b, 0x3d, 0x53, 0x16, 0xd1, 0x1e, 0xec, 0x58, 0xc7, 0x67,
	0xf6, 0xc2, 0x17, 0x59, 0xe5, 0x87, 0x35, 0xe3, 0x00, 0xe4, 0x1f, 0xb7, 0x8d, 0x13, 0x3d, 0xe4,
	0xa9, 0x40, 0x11, 0xeb, 0x3f, 0xea, 0x9d, 0xbe, 0xde, 0x8d, 0xe1, 0x86, 0xf9, 0xa4, 0x67, 0x74,
	0x74, 0x5b, 0xc7, 0xb8, 0x87, 0xe5, 0xac, 0x42, 0x61, 0xff, 0x90, 0x6c, 0xb2, 0xd4, 0x73, 0x90,
	0xd3, 0xad, 0x3b, 0xaa, 0x07, 0xe1, 0xf6, 0xf5, 0x90, 0x92, 0xf7, 0x3d, 0xbe, 0xbc, 0xa4, 0xfc,
	0x2b, 0xc0, 0xfb, 0xab, 0x87, 0x26, 0xb6, 0x39, 0x01, 0x89, 0x71, 0x87, 0x93, 0xc4, 0x35, 0xdf,
	0xdc, 0xd8, 0x9c, 0x36, 0xa9, 0x6f, 0x85, 0x68, 0x1c, 0x93, 0xa4, 0xaa, 0x51, 0x5c, 0xab, 0xc6,
	0x6f, 0x21, 0x17, 0x76, 0x9e, 0xa4, 0xc6, 0x6f, 0xd7, 0xb9, 0x70, 0x04, 0x51, 0x3e, 0x05, 0x29,
	0x3a, 0x66, 0x39, 0x89, 0x65, 0x28, 0x58, 0x67, 0x9d, 0x8e, 0x6e, 0x59, 0xb2, 0xa0, 0xfc, 0x25,
	0x42, 0x39, 0x05, 0x44, 0x5a, 0xe2, 0xa8, 0xbb, 0x29, 0x18, 0x7b, 0x6b, 0xd9, 0x3f, 0xe2, 0x5a,
	0x8b, 0x5b, 0xf8, 0x67, 0xad, 0x1f, 0x66, 0x6f, 0xee, 0x87, 0x8b, 0x97, 0x2d, 0xb7, 0xe5, 0xcb,
	0xb6, 0xda, 0x49, 0xa5, 0xbb, 0x74, 0xd2, 0x7b, 0x90, 0x8f, 0x69, 0x51, 0x1d, 0xa4, 0x99, 0x33,
	0x9a, 0x92, 0xb5, 0x06, 0x2e, 0xe0, 0x78, 0xa1, 0xf9, 0x9f, 0x08, 0xe5, 0x94, 0x50, 0x68, 0x08,
	0xb0, 0x78, 0xa6, 0xd0, 0x97, 0x5b, 0xbc, 0xaa, 0xb5, 0xaf, 0xb6, 0x79, 0xf9, 0xd0, 0x6b, 0xd8,
	0x5b, 0xf3, 0x3c, 0x6a, 0x6e, 0xd5, 0x20, 0xe2, 0x63, 0x5b, 0x77, 0x68, 0x2a, 0x88, 0xc1, 0xee,
	0x72, 0xc1, 0xa3, 0xc6, 0xed, 0xad, 0x11, 0x9f, 0xfb, 0x60, 0x5b, 0x2f, 0x69, 0xaf, 0xa1, 0x1e,
	0xd0, 0x61, 0x0a, 0x36, 0x24, 0xfe, 0x0a, 0xf4, 0x67, 0x7d, 0xe8, 0xf1, 0x8b, 0xe9, 0x79, 0x98,
	0xe6, 0xc6, 0x0b, 0xcf, 0x27, 0x83, 0x80, 0xbd, 0x62, 0x9c, 0x8c, 0x1b, 0x11, 0xe2, 0xbe, 0x33,
	0xf1, 0x1a, 0x43, 0xe2, 0x47, 0xbf, 0x69, 0x8d, 0xe5, 0x3f, 0xc3, 0xef, 0x53, 0xc3, 0x3f, 0x44,
	0xb9, 0x7d, 0xaa, 0xa5, 0xee, 0xf0, 0xa4, 0x75, 0x9e, 0x8f, 0x40, 0xad, 0xff, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x47, 0x34, 0xd3, 0x59, 0x51, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransactionClient is the client API for Transaction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionClient interface {
	// GetHistory returns the transaction history for an account,
	// with additional off-chain invoice data, if available.
	GetHistory(ctx context.Context, in *GetHistoryRequest, opts ...grpc.CallOption) (*GetHistoryResponse, error)
	// SubmitTransaction submits a transaction.
	//
	// If the memo does not conform to the Kin binary memo format,
	// the transaction is not eligible for whitelisting.
	//
	// If the memo _does_ conform to the Kin binary memo format,
	// the transaction may be whitelisted depending on app
	// configuration.
	//
	// See: https://github.com/kinecosystem/agora-api/blob/master/spec/memo.md
	SubmitTransaction(ctx context.Context, in *SubmitTransactionRequest, opts ...grpc.CallOption) (*SubmitTransactionResponse, error)
	// GetTransaction returns a transaction and additional off-chain
	// invoice data, if available.
	GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionResponse, error)
}

type transactionClient struct {
	cc *grpc.ClientConn
}

func NewTransactionClient(cc *grpc.ClientConn) TransactionClient {
	return &transactionClient{cc}
}

func (c *transactionClient) GetHistory(ctx context.Context, in *GetHistoryRequest, opts ...grpc.CallOption) (*GetHistoryResponse, error) {
	out := new(GetHistoryResponse)
	err := c.cc.Invoke(ctx, "/kin.agora.transaction.v3.Transaction/GetHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) SubmitTransaction(ctx context.Context, in *SubmitTransactionRequest, opts ...grpc.CallOption) (*SubmitTransactionResponse, error) {
	out := new(SubmitTransactionResponse)
	err := c.cc.Invoke(ctx, "/kin.agora.transaction.v3.Transaction/SubmitTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionResponse, error) {
	out := new(GetTransactionResponse)
	err := c.cc.Invoke(ctx, "/kin.agora.transaction.v3.Transaction/GetTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransactionServer is the server API for Transaction service.
type TransactionServer interface {
	// GetHistory returns the transaction history for an account,
	// with additional off-chain invoice data, if available.
	GetHistory(context.Context, *GetHistoryRequest) (*GetHistoryResponse, error)
	// SubmitTransaction submits a transaction.
	//
	// If the memo does not conform to the Kin binary memo format,
	// the transaction is not eligible for whitelisting.
	//
	// If the memo _does_ conform to the Kin binary memo format,
	// the transaction may be whitelisted depending on app
	// configuration.
	//
	// See: https://github.com/kinecosystem/agora-api/blob/master/spec/memo.md
	SubmitTransaction(context.Context, *SubmitTransactionRequest) (*SubmitTransactionResponse, error)
	// GetTransaction returns a transaction and additional off-chain
	// invoice data, if available.
	GetTransaction(context.Context, *GetTransactionRequest) (*GetTransactionResponse, error)
}

// UnimplementedTransactionServer can be embedded to have forward compatible implementations.
type UnimplementedTransactionServer struct {
}

func (*UnimplementedTransactionServer) GetHistory(ctx context.Context, req *GetHistoryRequest) (*GetHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHistory not implemented")
}
func (*UnimplementedTransactionServer) SubmitTransaction(ctx context.Context, req *SubmitTransactionRequest) (*SubmitTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitTransaction not implemented")
}
func (*UnimplementedTransactionServer) GetTransaction(ctx context.Context, req *GetTransactionRequest) (*GetTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransaction not implemented")
}

func RegisterTransactionServer(s *grpc.Server, srv TransactionServer) {
	s.RegisterService(&_Transaction_serviceDesc, srv)
}

func _Transaction_GetHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).GetHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kin.agora.transaction.v3.Transaction/GetHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).GetHistory(ctx, req.(*GetHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_SubmitTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).SubmitTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kin.agora.transaction.v3.Transaction/SubmitTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).SubmitTransaction(ctx, req.(*SubmitTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_GetTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).GetTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kin.agora.transaction.v3.Transaction/GetTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).GetTransaction(ctx, req.(*GetTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Transaction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kin.agora.transaction.v3.Transaction",
	HandlerType: (*TransactionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHistory",
			Handler:    _Transaction_GetHistory_Handler,
		},
		{
			MethodName: "SubmitTransaction",
			Handler:    _Transaction_SubmitTransaction_Handler,
		},
		{
			MethodName: "GetTransaction",
			Handler:    _Transaction_GetTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction/v3/transaction_service.proto",
}
